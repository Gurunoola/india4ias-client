import React, { useEffect, useState } from 'react';
import DatePicker from 'react-datepicker';
import {
  labels,
  validationErrorMessages,
  requiredAsterisk as asterisk,
} from '../../ConstantManager';
//import AsyncDropdown from '../../../components/AsyncDropdown/Loadable';

const initialValues = {
  tabs: {
    studentData: {
      firstName: 'Reyansh',
      lastName: 'Noola',
      email: 'gurusharannoola@gmail.com',
      primaryMobile: '9740431433',
      dob: '12/12/2020',
      gender: 'male',
      aadhaarNumber: '1234 1234 1234',
      classAppliedFor: '1st',
      middleName: 'Gurusharan',
      presentSchoolName: 'Present School Name',
      presentClassName: 'Present Class',
      secondaryMobile: '9740431433',
      sectionAppliedFor: 'A',
      branchAppliedFor: '1st',
      medicalCondition: 'Medical Condition (if any)',
      bloodGroup: 'A+',
    },
    fatherData: {
      firstName: 'Gurusharan',
      lastName: 'Noola',
      email: 'gurusharannoola@gmail.com',
      primaryMobile: '9740431433',
      officeAddress:
        '#902, North Block, Preethi Woods Apartments, 6th Cross, Vidhya Nagar Layout, Thanisandra',
      dob: '12/12/12',
      designation: 'asd',
      occupation: 'asd',
      qualification: 'Qualification',
    },
    motherData: {
      firstName: 'Danamma',
      lastName: 'Noola',
      email: 'gurusharannoola@gmail.com',
      primaryMobile: '9740431433',
      officeAddress:
        '#902, North Block, Preethi Woods Apartments, 6th Cross, Vidhya Nagar Layout, Thanisandra',
      dob: '12/12/12',
      occupation: '123',
      designation: '123',
      qualification: 'Qualification',
    },
    addressData: {
      address1: '#902, North Block, Preethi Woods Apartments, 6th Cross',
      address2: 'Vidhya Nagar Layout, Thanisandra',
      city: 'Bangalore ',
      state: 'Karnataka',
      country: 'India',
      pincode: '560077',
    },
  },
};

export const schema = {
  schema: {
    id: 'student_create_form',
    label: 'StudentCreateForm',
    type: 'container',
    renderer: 'form',
    elements: {
      tabsContainer: {
        type: 'container',
        renderer: 'tabs',
        name: 'tabs',
        cardClass: 'mb-4',
        cardBodyClass: 'none',
        tabColumnClass: 'col-sm-12 col-md-12 col-lg-3',
        contentColumnClass: 'col-sm-12 col-md-12 col-lg-9',
        elements: {
          studentInformation: {
            label: labels.STUDENT_INFORMATION,
            name: 'studentData',
            htmlClass: 'form-control',
            elements: {
              row1: {
                type: 'container',
                renderer: 'div',
                htmlClass: 'row',
                elements: {
                  firstName: {
                    name: 'firstName',
                    label: labels.FIRST_NAME + asterisk,
                    type: 'field',
                    comment: labels.AS_PER_AADHAAR,
                    error: validationErrorMessages.REQUIRED,
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'text',
                    validation: [['string'], ['required'], ['min', 3]],
                  },
                  middleName: {
                    name: 'middleName',
                    label: labels.MIDDLE_NAME,
                    type: 'field',
                    error: validationErrorMessages.REQUIRED,
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'text',
                  },
                  lastName: {
                    name: 'lastName',
                    label: labels.LAST_NAME + asterisk,
                    type: 'field',
                    error: validationErrorMessages.REQUIRED,
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    comment: labels.AS_PER_AADHAAR,
                    fieldType: 'text',
                    validation: [['string'], ['required'], ['min', 3]],
                  },
                  dob: {
                    name: 'dob',
                    label: labels.DOB + asterisk,
                    type: 'field',
                    error: validationErrorMessages.DOB,
                    renderer: 'text',

                    htmlClass: 'col-md-4 mb-4',
                    comment: labels.DD_MM_YYYY,
                    fieldType: 'date',
                    class: 'form-control',
                    validation: [['string'], ['required']],
                  },
                  email: {
                    name: 'email',
                    label: labels.EMAIL + asterisk,
                    type: 'field',
                    error: validationErrorMessages.EMAIL,
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'email',
                    validation: [['string'], ['required'], ['email']],
                  },
                  gender: {
                    type: 'field',
                    error: validationErrorMessages.PLEASE_SELECT,
                    renderer: 'react-select',
                    name: 'gender',
                    label: labels.GENDER + asterisk,
                    isCreatable: false,
                    htmlClass: 'col-md-4 mb-4',
                    options: [
                      {
                        value: 'null',
                        label: 'Please select',
                      },
                      {
                        value: 'male',
                        label: labels.GENDER_MALE,
                      },
                      {
                        value: 'female',
                        label: labels.GENDER_FEMALE,
                      },
                    ],
                    validation: [
                      ['string'],
                      ['required'],
                      ['matches', /(male|female)/],
                    ],
                  },
                  primaryMobile: {
                    name: 'primaryMobile',
                    label: labels.PRIMARY_MOBILE + asterisk,
                    type: 'field',
                    error: validationErrorMessages.MOBILE,
                    renderer: 'number',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'telephone',
                    validation: [
                      ['string'],
                      ['required'],
                      ['matches', /^[789]\d{9}$/],
                    ],
                    // enabledWhen: ['or', ['isOfType', 'email', 'undefined'], ['is', 'email', '']],
                  },
                  secondaryMobile: {
                    name: 'secondaryMobile',
                    label: labels.SECONDARY_MOBILE,
                    error: validationErrorMessages.MOBILE,
                    type: 'field',
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'telephone',
                    validation: [['string'], ['matches', /^[789]\d{9}$/]],
                    // enabledWhen: ['or', ['isOfType', 'email', 'undefined'], ['is', 'email', '']],
                  },
                  aadharNumber: {
                    name: 'aadhaarNumber',
                    label: labels.AADHAAR + asterisk,
                    type: 'field',
                    error: validationErrorMessages.INVALID_AADHAAR,
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'text',
                    validation: [
                      ['string'],
                      ['required'],
                      ['matches', /^\d{4}\s\d{4}\s\d{4}$/],
                    ],
                  },
                  presentSchoolName: {
                    name: 'presentSchoolName',
                    label: labels.PRESENT_SCHOOL_NAME,
                    type: 'field',
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'telephone',
                    validation: [['string']],
                  },
                  presentClassName: {
                    name: 'presentClassName',
                    label: labels.PRESENT_CLASS_NAME,
                    type: 'field',
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'telephone',
                    validation: [['string']],
                  },
                  secondaryMobile: {
                    name: 'secondaryMobile',
                    label: labels.SECONDARY_MOBILE,
                    error: validationErrorMessages.MOBILE,
                    type: 'field',
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'telephone',
                    validation: [['string'], ['matches', /^[789]\d{9}$/]],
                    // enabledWhen: ['or', ['isOfType', 'email', 'undefined'], ['is', 'email', '']],
                  },
                  classAppliedFor: {
                    type: 'field',
                    error: validationErrorMessages.PLEASE_SELECT,
                    
                    name: 'classAppliedFor',
                    label: labels.CLASS_APPLIED_FOR + asterisk,
                    isCreatable: false,
                    htmlClass: 'col-md-4 mb-4',
                    loadState: 'students',
                    optionTitle: 'firstName',
                    optionValue: 'firstName',
                    validation: [ ['string'], ['required']]
                  },
                  sectionAppliedFor: {
                    type: 'field',
                    error: validationErrorMessages.PLEASE_SELECT,
                    renderer: 'react-select',
                    name: 'sectionAppliedFor',
                    label: labels.SECTION_APPLIED_FOR + asterisk,
                    isCreatable: false,
                    htmlClass: 'col-md-4 mb-4',
                    options: [{ value: 'A', label: 'A' }],
                    validation: [['string'], ['required']],
                  },
                  branchAppliedFor: {
                    type: 'field',
                    error: validationErrorMessages.PLEASE_SELECT,
                    renderer: 'react-select',
                    name: 'branchAppliedFor',
                    label: labels.BRANCH_APPLIED_FOR + asterisk,
                    isCreatable: false,
                    htmlClass: 'col-md-4 mb-4',
                    validation: [['string'], ['required']],
                    options: [{ value: '1st', label: 'Class 1st' }],
                  },

                  medicalConditions: {
                    name: 'medicalCondition',
                    label: labels.MEDICAL_CONDITION,
                    type: 'field',
                    error: validationErrorMessages.REQUIRED,
                    renderer: 'textarea',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'text',
                    validation: [['string'], ['min', 3]],
                  },
                  bloodGroup: {
                    type: 'field',
                    renderer: 'react-select',
                    name: 'bloodGroup',
                    label: labels.BLOOD_GROUP,
                    isCreatable: false,
                    htmlClass: 'col-md-4 mb-4',
                    options: [
                      { value: '', label: labels.PLEASE_SELECT },
                      { value: 'A+', label: labels.BLOOD_GROUP_AP },
                      { value: 'A-', label: labels.BLOOD_GROUP_AN },
                      { value: 'B+', label: labels.BLOOD_GROUP_BP },
                      { value: 'B-', label: labels.BLOOD_GROUP_BN },
                      { value: 'O+', label: labels.BLOOD_GROUP_OP },
                      { value: 'O-', label: labels.BLOOD_GROUP_ON },
                      { value: 'AB+', label: labels.BLOOD_GROUP_ABP },
                      { value: 'AB-', label: labels.BLOOD_GROUP_ABN },
                    ],
                  },
                  photo: {
                    name: 'photo',
                    label: labels.PHOTO,
                    htmlClass: 'col-md-4 mb-4',
                    type: 'field',
                    renderer: 'file-uploader',
                    comment: labels.PHOTO_SIZE,
                    options: {
                      accept: ['image/*', 'text/*'],
                      multiple: false,
                      maxFiles: 1,
                      minFiles: 1,
                    },
                  },
                },
              },
            },
          },
          fatherInformation: {
            label: labels.FATHER_INFORMATION,
            name: 'fatherData',
            htmlClass: 'form-control',
            elements: {
              fatherInfo: {
                type: 'container',
                renderer: 'div',
                htmlClass: 'row',
                elements: {
                  firstName: {
                    name: 'firstName',
                    label: labels.FIRST_NAME + asterisk,
                    type: 'field',
                    error: validationErrorMessages.REQUIRED,
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'text',
                    validation: [['string'], ['required'], ['min', 3]],
                  },
                  middleName: {
                    name: 'middleName',
                    label: labels.MIDDLE_NAME,
                    type: 'field',
                    error: validationErrorMessages.REQUIRED,
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'text',
                  },
                  lastName: {
                    name: 'lastName',
                    label: labels.LAST_NAME + asterisk,
                    type: 'field',
                    error: validationErrorMessages.REQUIRED,
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'text',
                    validation: [['string'], ['required'], ['min', 3]],
                  },
                  dob: {
                    name: 'dob',
                    label: labels.DOB + asterisk,
                    type: 'field',
                    error: validationErrorMessages.DOB,
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'text',
                    validation: [
                      ['string'],
                      ['required'],
                      [
                        'matches',
                        /^(?:(?:31(\/|-|\.)(?:0?[13578]|1[02]))\1|(?:(?:29|30)(\/|-|\.)(?:0?[13-9]|1[0-2])\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})$|^(?:29(\/|-|\.)0?2\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\d|2[0-8])(\/|-|\.)(?:(?:0?[1-9])|(?:1[0-2]))\4(?:(?:1[6-9]|[2-9]\d)?\d{2})$/,
                      ],
                    ],
                  },
                  email: {
                    name: 'email',
                    label: labels.EMAIL + asterisk,
                    type: 'field',
                    error: validationErrorMessages.EMAIL,
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'text',
                    validation: [['string'], ['required'], ['email']],
                  },
                  primaryMobile: {
                    name: 'primaryMobile',
                    label: labels.PRIMARY_MOBILE + asterisk,
                    type: 'field',
                    error: validationErrorMessages.MOBILE,
                    renderer: 'number',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'telephone',
                    validation: [
                      ['string'],
                      ['required'],
                      ['matches', /^[789]\d{9}$/],
                    ],
                  },
                  qualification: {
                    name: 'qualification',
                    label: labels.QUALIFICATION + asterisk,
                    type: 'field',
                    error: validationErrorMessages.REQUIRED,
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'text',
                    validation: [['string'], ['required']],
                  },
                  occupation: {
                    name: 'occupation',
                    label: labels.OCCUPATION + asterisk,
                    type: 'field',
                    error: validationErrorMessages.REQUIRED,
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'text',
                    validation: [['string'], ['required']],
                  },
                  designation: {
                    name: 'designation',
                    label: labels.DESIGNATION,
                    type: 'field',
                    error: validationErrorMessages.REQUIRED,
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'text',
                    validation: [['string']],
                  },
                  officeAddress: {
                    name: 'officeAddress',
                    label: labels.OFFICE_ADDRESS,
                    type: 'field',
                    error: validationErrorMessages.REQUIRED,
                    renderer: 'textarea',
                    htmlClass: 'col-md-8 mb-4',
                    fieldType: 'text',
                    validation: [['string']],
                  },
                },
              },
            },
          },
          motherInformation: {
            label: labels.MOTHER_INFORMATION,
            name: 'motherData',
            htmlClass: 'form-control',
            elements: {
              motherInfo: {
                type: 'container',
                renderer: 'div',
                htmlClass: 'row',

                elements: {
                  firstName: {
                    name: 'firstName',
                    label: labels.FIRST_NAME + asterisk,
                    type: 'field',
                    error: validationErrorMessages.REQUIRED,
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'text',
                    validation: [['string'], ['required'], ['min', 3]],
                  },
                  middleName: {
                    name: 'middleName',
                    label: labels.MIDDLE_NAME,
                    type: 'field',
                    error: validationErrorMessages.REQUIRED,
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'text',
                  },
                  lastName: {
                    name: 'lastName',
                    label: labels.LAST_NAME + asterisk,
                    type: 'field',
                    error: validationErrorMessages.REQUIRED,
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'text',
                    validation: [['string'], ['required'], ['min', 3]],
                  },
                  dob: {
                    name: 'dob',
                    label: labels.DOB + asterisk,
                    type: 'field',
                    error: validationErrorMessages.DOB,
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'text',
                    validation: [
                      ['string'],
                      ['required'],
                      [
                        'matches',
                        /^(?:(?:31(\/|-|\.)(?:0?[13578]|1[02]))\1|(?:(?:29|30)(\/|-|\.)(?:0?[13-9]|1[0-2])\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})$|^(?:29(\/|-|\.)0?2\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\d|2[0-8])(\/|-|\.)(?:(?:0?[1-9])|(?:1[0-2]))\4(?:(?:1[6-9]|[2-9]\d)?\d{2})$/,
                      ],
                    ],
                  },
                  email: {
                    name: 'email',
                    label: labels.EMAIL + asterisk,
                    type: 'field',
                    error: validationErrorMessages.EMAIL,
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'text',
                    validation: [['string'], ['required'], ['email']],
                  },
                  primaryMobile: {
                    name: 'primaryMobile',
                    label: labels.PRIMARY_MOBILE + asterisk,
                    type: 'field',
                    error: validationErrorMessages.MOBILE,
                    renderer: 'number',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'telephone',
                    validation: [
                      ['string'],
                      ['required'],
                      ['matches', /^[789]\d{9}$/],
                    ],
                  },
                  qualification: {
                    name: 'qualification',
                    label: labels.QUALIFICATION + asterisk,
                    type: 'field',
                    error: validationErrorMessages.REQUIRED,
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'text',
                    validation: [['string'], ['required']],
                  },
                  occupation: {
                    name: 'occupation',
                    label: labels.OCCUPATION + asterisk,
                    type: 'field',
                    error: validationErrorMessages.REQUIRED,
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'text',
                    validation: [['string'], ['required']],
                  },
                  designation: {
                    name: 'designation',
                    label: labels.DESIGNATION,
                    type: 'field',
                    error: validationErrorMessages.REQUIRED,
                    renderer: 'text',
                    htmlClass: 'col-md-4 mb-4',
                    fieldType: 'text',
                    validation: [['string']],
                  },
                  officeAddress: {
                    name: 'officeAddress',
                    label: labels.OFFICE_ADDRESS,
                    type: 'field',
                    error: validationErrorMessages.REQUIRED,
                    renderer: 'textarea',
                    htmlClass: 'col-md-8 mb-4',
                    fieldType: 'text',
                    validation: [['string']],
                  },
                },
              },
            },
          },
          addressInformation: {
            label: 'Address Information',
            name: 'addressData',
            htmlClass: 'form-control',
            elements: {
              row2: {
                type: 'container',
                renderer: 'div',
                htmlClass: 'row',
                elements: {
                  address1: {
                    name: 'address1',
                    label: labels.ADDRESS_1 + asterisk,
                    type: 'field',
                    error: validationErrorMessages.REQUIRED,
                    renderer: 'textarea',
                    htmlClass: 'col-md-6 mb-4',
                    fieldType: 'text',
                    validation: [['string'], ['required'], ['min', 3]],
                  },
                  address2: {
                    name: 'address2',
                    label: labels.ADDRESS_2,
                    type: 'field',
                    renderer: 'textarea',
                    htmlClass: 'col-md-6 mb-4',
                    fieldType: 'text',
                  },
                  city: {
                    name: 'city',
                    label: labels.CITY + asterisk,
                    type: 'field',
                    error: validationErrorMessages.REQUIRED,
                    renderer: 'text',
                    htmlClass: 'col-md-6 mb-4',
                    fieldType: 'text',
                    validation: [['string'], ['required'], ['min', 3]],
                  },
                  state: {
                    name: 'state',
                    label: labels.STATE + asterisk,
                    type: 'field',
                    error: validationErrorMessages.REQUIRED,
                    renderer: 'text',
                    htmlClass: 'col-md-6 mb-4',
                    fieldType: 'text',
                    validation: [['string'], ['required'], ['min', 3]],
                  },
                  county: {
                    name: 'country',
                    label: labels.COUNTRY + asterisk,
                    type: 'field',
                    error: validationErrorMessages.REQUIRED,
                    renderer: 'text',
                    htmlClass: 'col-md-6 mb-4',
                    fieldType: 'text',
                    validation: [['string'], ['required'], ['min', 2]],
                  },
                  pincode: {
                    name: 'pincode',
                    label: labels.PIN_CODE + asterisk,
                    type: 'field',
                    error: validationErrorMessages.REQUIRED,
                    renderer: 'text',
                    htmlClass: 'col-md-6 mb-4',
                    fieldType: 'text',
                    validation: [['string'], ['required'], ['min', 6]],
                  },
                },
              },
            },
          },
        },
      },

      row3: {
        type: 'container',
        renderer: 'div',
        label: 'here',
        htmlClass: 'row',
        elements: {
          type: 'container',
          renderer: 'div',
          row1: {
            type: 'container',
            renderer: 'div',
            htmlClass: 'col-md-12',
            elements: {
              reset: {
                type: 'field',
                renderer: 'button',
                content: labels.BUTTON_RESET,
                fieldClass: 'btn-secondary',
                htmlClass: 'float-right',
                fieldType: 'button',
                buttonType: 'reset',
              },
              save: {
                type: 'field',
                error: validationErrorMessages.REQUIRED,
                renderer: 'button',
                content: labels.BUTTON_SAVE,
                fieldClass: 'btn-primary mr-2',
                fieldType: 'button',
                htmlClass: 'float-right',
                buttonType: 'submit',
              },
            },
          },
        },
      },
    },
  },
};
